services:
  postgres:
    image: postgres:15-alpine
    container_name: ai-memory-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ai-memory-network

  ai-memory-server:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: ai-memory-server
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      NODE_ENV: production
      PORT: 3000
      USE_HTTPS: ${USE_HTTPS}
      SSL_KEY_PATH: ${SSL_KEY_PATH}
      SSL_CERT_PATH: ${SSL_CERT_PATH}
      API_KEY: ${API_KEY}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS}
      LOG_LEVEL: ${LOG_LEVEL}
      LOG_FILE: ${LOG_FILE}
    ports:
      - '3001:3000'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./private-key.pem:/app/private-key.pem
      - ./certificate.pem:/app/certificate.pem
    restart: unless-stopped
    healthcheck:
      test:
        [
          'CMD',
          'node',
          '-e',
          "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ai-memory-network

  # Optional: Redis for caching (if you want to add caching later)
  # redis:
  #   image: redis:7-alpine
  #   container_name: ai-memory-redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   networks:
  #     - ai-memory-network

volumes:
  postgres_data:
  # redis_data:

networks:
  ai-memory-network:
    driver: bridge
